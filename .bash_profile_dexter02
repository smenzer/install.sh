###
# set a fancy prompt (non-color, unless we know we "want" color)
#case "$TERM" in
#xterm-color)
#    PS1='[\[\033[01;32m\]\h\[\033[00m\]] \[\033[01;34m\]\w\[\033[00m\]\$ '
#    ;;
#*)
#    PS1='[\h] \w\$ '
#    ;;
#esac
##export PS1='[\[\033[01;32m\]\h\[\033[00m\]] \[\033[00;36m\]\w\[\033[00m\]\$ ' 

##
# Set git autocompletion and PS1 integration
if [ -f /usr/local/git/contrib/completion/git-completion.bash ]; then
	. /usr/local/git/contrib/completion/git-completion.bash
fi
GIT_PS1_SHOWDIRTYSTATE=true
GIT_PS1_SHOWSTASHSTATE=true
GIT_PS1_SHOWUNTRACKEDFILES=true
GIT_PS1_SHOWUPSTREAM="auto"

if [ -f /opt/local/etc/bash_completion ]; then
	. /opt/local/etc/bash_completion
fi

##
# set prompt
GREEN="\[\033[0;32m\]"
TEAL="\[\033[00;36m\]"
WHITE="\[\033[00m\]"
RED="\[\033[0;31m\]"
YELLOW="\[\033[0;33m\]"

#export PS1='[\[\033[01;32m\]\h\[\033[00m\]] \[\033[00;36m\]\w\[\033[00m\]\$ ' 
export PS1="$WHITE[$GREEN\h$WHITE] $TEAL\w$YELLOW\$(__git_ps1)$WHITE\$ "

##
# include .bash_common 
if [ -f ~/.bash_common ]; then
  source ~/.bash_common
fi

##
# include eric's API wrapper
if [ -f ~/terminal/.api_wrapper ]; then
	AUTHDIR="./auth/"
	source ~/terminal/.api_wrapper
fi

##
# start agent and add identity
ssh-agent > /tmp/ssh && ssh-add

##
# Your previous /Users/smenzer/.bash_profile file was backed up as /Users/smenzer/.bash_profile.macports-saved_2010-10-07_at_16:46:08
# MacPorts Installer addition on 2010-10-07_at_16:46:08: adding an appropriate PATH variable for use with MacPorts.
export PATH=$HOME/bin:/opt/local/bin:/opt/local/sbin:$PATH

##
# Your previous /Users/smenzer/.bash_profile file was backed up as /Users/smenzer/.bash_profile.macports-saved_2013-07-06_at_20:19:40
##

# MacPorts Installer addition on 2013-07-06_at_20:19:40: adding an appropriate PATH variable for use with MacPorts.
export PATH=/opt/local/bin:/opt/local/sbin:$HOME/.rvm/bin:$PATH
# Finished adapting your PATH environment variable for use with MacPorts.


[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
