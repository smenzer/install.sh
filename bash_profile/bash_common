##
# make sure we use vim as our editor
export SVN_EDITOR=vim
export EDITOR=vim

# recycle bin to prevent unwanted deletes
function re(){
    if [ "$1" != "" ]; then
        mv $* /tmp
    else
        echo "Usage: re FILE..."
    fi
}

# quick access to bash files
alias bp='vi ~/.bash_profile'
alias ba='vi ~/.bash_aliases'

# terminal commands
alias ll='ls -laG --color'
alias vi='vim'
alias md5sum='md5 -r'
#alias rm="re"
#alias mv="mv -i"

# kill failed ssh sessions
alias kl='killall ssh-agent; killall ssh'

# ssh
alias gator='ssh -p 2222 smenzer@gator.menzer.org'
alias os='ssh 536039ad4382ec2f2600029b@car-cartracker.rhcloud.com'
alias kathie='ssh kathie@chicago.menzer.org'

# include .bash_aliases 
if [ -f ~/.bash_aliases ]; then
  source ~/.bash_aliases
fi

# include __git_ps1
if [ -f ~/terminal/git/git-prompt.sh ]; then
  source ~/terminal/git/git-prompt.sh
fi
GIT_PS1_SHOWDIRTYSTATE=true
GIT_PS1_SHOWSTASHSTATE=true
GIT_PS1_SHOWUNTRACKEDFILES=true
GIT_PS1_SHOWUPSTREAM="auto"

##
# set prompt
GREEN="\[\033[0;32m\]"
BLUE="\[\033[0;94m\]"
TEAL="\[\033[00;36m\]"
BTEAL="\[\033[01;36m\]"
WHITE="\[\033[00m\]"
RED="\[\033[0;31m\]"
YELLOW="\[\033[0;33m\]"

#export PS1="$WHITE[$GREEN\h$WHITE] $TEAL\w$YELLOW\$(__git_ps1)$WHITE\n\D{%F %T} \$ "
#export PS1="$WHITE[$GREEN\D{%F %T}$WHITE] $WHITE[$BLUE\h:$BTEAL\w$WHITE]$YELLOW\$(__git_ps1)\n$GREEN\$$WHITE "
export PS1="$WHITE[$GREEN\H$WHITE:$BTEAL\w$WHITE] $BLUE\D{%F %T}$YELLOW\$(__git_ps1)\n\$$WHITE "


function cycle_wifi() {
	device="$(networksetup -listallhardwareports | grep -E '(Wi-Fi|AirPort)' -A 1 | grep -o "en.")"
	[[ "$(networksetup -getairportpower $device)" == *On ]] && val=off || val=on
	networksetup -setairportpower $device $val
}
function fix_wifi() {
	wifi_device="$(networksetup -listallnetworkservices | grep -Eo '(Wi-Fi|AirPort)')"
	ethernet_device="$(networksetup -listallnetworkservices | grep -Eo '(USB Ethernet)')"

	networksetup -setnetworkserviceenabled "$wifi_device" off
	networksetup -setnetworkserviceenabled "$ethernet_device" off
	networksetup -setnetworkserviceenabled "$wifi_device" on
	networksetup -setnetworkserviceenabled "$ethernet_device" on
}
function fix_ssh() {
  for key in SSH_AUTH_SOCK SSH_CONNECTION SSH_CLIENT; do
    if (tmux show-environment | grep "^${key}" > /dev/null); then
      value=`tmux show-environment | grep "^${key}" | sed -e "s/^[A-Z_]*=//"`
      export ${key}="${value}"
    fi
  done
}

