# Make it use C-a, similar to screen..
 unbind C-b
 unbind l
 set -g prefix C-a
 bind-key C-a last-window

# reload key
bind r source-file ~/.tmux.conf

#Status bar
#set -g status-left "#[fg=green]#H "
#set -g status-right "[ #[fg=default]%a %Y-%m-%d %H:%M #[default]]"
#set -g status-bg black
#set -g status-fg white
#set -g status-interval 60
#set -g status-left-length 30
#set -g status-left '#[fg=green](#S) #(whoami)@#H#[default]'
#set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=blue]%H:%M#[default]'

set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 40
set -g status-right-length 140
set -g status-left '#[fg=green]#H â€¢ #(uname) #(uname -r | cut -c 1-6)#[default]'
set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load -i 1) #[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a %Y-%m-%d%l:%M:%S %p'


# default statusbar colors
set -g status-fg white
set -g status-bg black
set -g status-attr bright

# default window title colors
set-window-option -g window-status-fg black
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg red
set-window-option -g window-status-current-attr bright

# command/message line colors
set -g message-fg black
set -g message-bg white
set -g message-attr bright

# set pane borders
set -g pane-border-fg blue
set -g pane-active-border-fg green
set -g pane-active-border-bg default

# toggle statusbar
bind-key b set-option status

# Rename window title automatically to running process
setw -g automatic-rename

# set vi mode
unbind [
bind Escape copy-mode
setw -g mode-keys vi

# ctrl+left/right cycles thru windows
#bind-key -n C-right next
#bind-key -n C-left prev

# use the vim motion keys to move between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# use the vim resize keys.
# the number at the end is how much the pane will be resized,
bind - resize-pane -D 2
bind = resize-pane -U 2
bind < resize-pane -L 4
bind > resize-pane -R 4

# confirm before killing a window or the server
bind-key q confirm kill-window
bind-key q confirm kill-server

#Large history limit
set -g history-limit 30000

# start window indexing at 1 instead of 0
set -g base-index 1

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# listen for activity on all windows
set -g bell-action any

# Last window - ctrl+a
bind-key C-a last-window

# Remap Split Windows to more intuitive keys
unbind '"'
bind v split-window -h
unbind %
bind s split-window -v

# Enable mouse control
setw -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on
set -g mouse-utf8 off

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set -s escape-time 50
